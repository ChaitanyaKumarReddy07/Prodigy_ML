What is Prometheus monitoring
Prometheus is an open-source technology designed to provide monitoring and alerting 
functionality for cloud-native environments, including Kubernetes. It can collect 
and store metrics as time-series data, recording information with a timestamp. It 
can also collect and record labels, which are optional key-value pairs.
Key features of Prometheus include:
Multidimensional data model – 
Using time-series data, which is identified by metric name and key-value pairs.
PromQL – A flexible querying language that can leverage the multi-dimensional data 
model.
No reliance on distributed storage – All single server nodes remain autonomous.
Pull model – Prometheus can collect time-series data by actively “pulling” data over 
HTTP.
Pushing time-series data – Available through the use of an intermediary gateway.
Monitoring target discovery – Available through static configuration or service 
discovery.
Visualization – Prometheus offers multiple types of graphs and dashboards

How Does Prometheus Monitoring Work?
To get metrics, Prometheus requires an exposed HTTP endpoint. Once an endpoint is 
available, Prometheus can start scraping numerical data, capture it as a time series,
 and store it in a local database suited to time-series data. Prometheus can also be
 integrated with remote storage repositories.
 
What Can You Monitor with Prometheus?
1)Service Metrics
2)Host Metrics
3)Website Uptime/Up Status
4)Cronjobs

Why Use Prometheus for Kubernetes Monitoring?
1)Multidimensional data model 
2)Accessible format and protocols
3)Service discovery
4)Modular and highly available components

Prometheus Metric Types
1)Counter: This is a cumulative metric. It represents a single monotonically-
increasing counter, and its value can either increase or be reset to zero on restart.
2)Gauge : This metric represents one numerical value, which can arbitrarily go down 
and up. A gauge is often used to measure values like current memory usage or 
temperatures.
3)Histogram:  A histogram samples observations, such as request durations or 
response sizes. It then counts the observations in a configurable bucket. A 
histogram can also provide a total sum of all the observed values.